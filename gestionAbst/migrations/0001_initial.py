# Generated by Django 4.2.16 on 2025-06-03 21:15

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'Administrateur'), ('teacher', 'Enseignant'), ('parent', 'Parent')], default='teacher', max_length=10, verbose_name="Type d'utilisateur")),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Le numéro de téléphone doit être au format: '+225XXXXXXXX'.", regex='^\\+?1?\\d{8,15}$')], verbose_name='Téléphone')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('groups', models.ManyToManyField(blank=True, help_text='Les groupes auxquels appartient cet utilisateur.', related_name='customuser_groups', related_query_name='customuser', to='auth.group', verbose_name='groupes')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissions spécifiques pour cet utilisateur.', related_name='customuser_permissions', related_query_name='customuser', to='auth.permission', verbose_name='permissions utilisateur')),
            ],
            options={
                'verbose_name': 'Utilisateur personnalisé',
                'verbose_name_plural': 'Utilisateurs personnalisés',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('niveau', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Classe',
                'verbose_name_plural': 'Classes',
            },
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('prenoms', models.CharField(max_length=100)),
                ('date_naissance', models.DateField()),
                ('matricule', models.CharField(max_length=20, unique=True)),
                ('nom_parent', models.CharField(max_length=100)),
                ('telephone_parent', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Le numéro doit être au format: '+225XXXXXXXX' ou '0XXXXXXXX'.", regex='^\\+?225?\\d{8,10}$')])),
                ('email_parent', models.EmailField(blank=True, max_length=254)),
                ('actif', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eleves', to='gestionAbst.classe')),
            ],
            options={
                'verbose_name': 'Élève',
                'verbose_name_plural': 'Élèves',
                'ordering': ['nom', 'prenoms'],
            },
        ),
        migrations.CreateModel(
            name='Enseignement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee_scolaire', models.CharField(default='2024-2025', max_length=9)),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionAbst.classe')),
                ('enseignant', models.ForeignKey(limit_choices_to={'user_type': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Enseignement',
                'verbose_name_plural': 'Enseignements',
            },
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('coefficient', models.DecimalField(decimal_places=1, default=1.0, max_digits=3)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Matière',
                'verbose_name_plural': 'Matières',
            },
        ),
        migrations.CreateModel(
            name='SMSLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destinataire', models.CharField(max_length=15)),
                ('message', models.TextField()),
                ('statut', models.CharField(choices=[('envoye', 'Envoyé'), ('erreur', 'Erreur'), ('en_attente', 'En attente')], default='en_attente', max_length=10)),
                ('type_message', models.CharField(max_length=20)),
                ('reference_id', models.CharField(blank=True, max_length=50)),
                ('erreur_detail', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Log SMS',
                'verbose_name_plural': 'Logs SMS',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Seance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('heure_debut', models.TimeField()),
                ('heure_fin', models.TimeField()),
                ('description', models.TextField(blank=True)),
                ('appel_fait', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('enseignement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionAbst.enseignement')),
            ],
            options={
                'verbose_name': 'Séance',
                'verbose_name_plural': 'Séances',
                'ordering': ['-date', '-heure_debut'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_note', models.CharField(choices=[('devoir', 'Devoir'), ('composition', 'Composition'), ('interrogation', 'Interrogation'), ('projet', 'Projet')], max_length=15)),
                ('valeur', models.DecimalField(decimal_places=2, max_digits=4)),
                ('note_sur', models.DecimalField(decimal_places=2, default=20, max_digits=4)),
                ('date_evaluation', models.DateField(default=django.utils.timezone.now)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('sms_envoye', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='gestionAbst.eleve')),
                ('enseignement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionAbst.enseignement')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['-date_evaluation'],
            },
        ),
        migrations.AddField(
            model_name='enseignement',
            name='matiere',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionAbst.matiere'),
        ),
        migrations.CreateModel(
            name='Presence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.CharField(choices=[('present', 'Présent'), ('absent', 'Absent'), ('retard', 'En retard')], default='present', max_length=10)),
                ('remarque', models.TextField(blank=True)),
                ('sms_envoye', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionAbst.eleve')),
                ('seance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presences', to='gestionAbst.seance')),
            ],
            options={
                'verbose_name': 'Présence',
                'verbose_name_plural': 'Présences',
                'unique_together': {('seance', 'eleve')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='enseignement',
            unique_together={('enseignant', 'classe', 'matiere', 'annee_scolaire')},
        ),
    ]
